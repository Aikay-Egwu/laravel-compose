version: '3.8'

networks:
  laravel:
  
services: 
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_cont
    ports: 
      - "8080:80"
    volumes:
      - ./src/:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel
    args:
      - NGINXUSER=${NGINXUSER:-www-data}
      - NGINXGROUP=${NGINXGROUP:-www-data}
    depends_on:
      - php
      - mysql
      
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    tty: true
    ports:
      - "4306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s
    container_name: mysql_cont
    networks:
      - laravel
  php:
    build:
      context: .
      dockerfile: Dockerfile.dev.php
    container_name: php_cont
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    args:
      - PHPUSER=${PHPUSER:-www-data}
      - PHPGROUP=${PHPGROUP:-www-data}
    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: composer_cont
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel
  
  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: artisan
    volumes:
      - ./src:/var/www/html

    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
    
